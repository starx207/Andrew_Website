{
  "_args": [
    [
      {
        "raw": "rollup-plugin-uglify",
        "scope": null,
        "escapedName": "rollup-plugin-uglify",
        "name": "rollup-plugin-uglify",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/Users/AndrewStarr/Documents/vsCode/Personal Website"
    ]
  ],
  "_from": "rollup-plugin-uglify@latest",
  "_id": "rollup-plugin-uglify@2.0.1",
  "_inCache": true,
  "_location": "/rollup-plugin-uglify",
  "_nodeVersion": "6.3.1",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/rollup-plugin-uglify-2.0.1.tgz_1495399386569_0.7229561167769134"
  },
  "_npmUser": {
    "name": "trysound",
    "email": "trysound@yandex.ru"
  },
  "_npmVersion": "4.5.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "rollup-plugin-uglify",
    "scope": null,
    "escapedName": "rollup-plugin-uglify",
    "name": "rollup-plugin-uglify",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#DEV:/",
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/rollup-plugin-uglify/-/rollup-plugin-uglify-2.0.1.tgz",
  "_shasum": "67b37ad1efdafbd83af4c36b40c189ee4866c969",
  "_shrinkwrap": null,
  "_spec": "rollup-plugin-uglify",
  "_where": "/Users/AndrewStarr/Documents/vsCode/Personal Website",
  "author": {
    "name": "Bogdan Chadkin",
    "email": "trysound@yandex.ru"
  },
  "bugs": {
    "url": "https://github.com/TrySound/rollup-plugin-uglify/issues"
  },
  "dependencies": {
    "uglify-js": "^3.0.9"
  },
  "description": "Rollup plugin to minify generated bundle",
  "devDependencies": {
    "jest": "^20.0.3",
    "rollup": "^0.41.6"
  },
  "directories": {},
  "dist": {
    "shasum": "67b37ad1efdafbd83af4c36b40c189ee4866c969",
    "tarball": "https://registry.npmjs.org/rollup-plugin-uglify/-/rollup-plugin-uglify-2.0.1.tgz"
  },
  "files": [
    "index.js"
  ],
  "gitHead": "bd929e5ac2a9aa6ea57646b065922508650c33b5",
  "homepage": "https://github.com/TrySound/rollup-plugin-uglify#readme",
  "keywords": [
    "rollup",
    "rollup-plugin",
    "uglify",
    "minify"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "trysound",
      "email": "trysound@yandex.ru"
    }
  ],
  "name": "rollup-plugin-uglify",
  "optionalDependencies": {},
  "readme": "# rollup-plugin-uglify [![Travis Build Status][travis-img]][travis]\r\n\r\n[travis-img]: https://travis-ci.org/TrySound/rollup-plugin-uglify.svg\r\n[travis]: https://travis-ci.org/TrySound/rollup-plugin-uglify\r\n\r\n[Rollup](https://github.com/rollup/rollup) plugin to minify generated bundle.\r\n\r\n## Install\r\n\r\n```sh\r\nnpm i rollup-plugin-uglify -D\r\n```\r\n\r\n## Usage\r\n\r\n```js\r\nimport { rollup } from 'rollup';\r\nimport uglify from 'rollup-plugin-uglify';\r\n\r\nrollup({\r\n    entry: 'main.js',\r\n    plugins: [\r\n        uglify()\r\n    ]\r\n});\r\n```\r\n\r\n## Options\r\n\r\n```js\r\nuglify(options, minifier)\r\n```\r\n\r\n`options` – default: `{}`, type: `object`. [UglifyJS API options](https://github.com/mishoo/UglifyJS2#api-reference)\r\n\r\n`minifier` – default: `require('uglify-js').minify`, type: `function`. Module to use as a minifier. You can use other versions (or forks) of UglifyJS instead default one.\r\n\r\n## Warning\r\n\r\n[UglifyJS](https://github.com/mishoo/UglifyJS2), which this plugin is based on, does not support the ES2015 module syntax. Thus using this plugin with Rollup's default bundle format (`'es'`) will not work and error out.\r\nTo work around this you can tell `rollup-plugin-uglify` to use the UglifyJS [unstable es version](https://github.com/mishoo/UglifyJS2) by passing its `minify` function to minify your code.\r\n```js\r\nimport { rollup } from 'rollup';\r\nimport uglify from 'rollup-plugin-uglify';\r\nimport { minify } from 'uglify-es';\r\n\r\nrollup({\r\n    entry: 'main.js',\r\n    plugins: [\r\n        uglify({}, minify)\r\n    ]\r\n});\r\n```\r\n\r\nTo install the experimental version of UglifyJS:\r\n\r\n```\r\nnpm i uglify-es -D\r\n```\r\n\r\n## Examples\r\n\r\n### Comments\r\n\r\nIf you'd like to preserve comments (for licensing for example), then you can specify a function to do this like so:\r\n\r\n```js\r\nuglify({\r\n  output: {\r\n    comments: function(node, comment) {\r\n        var text = comment.value;\r\n        var type = comment.type;\r\n        if (type == \"comment2\") {\r\n            // multiline comment\r\n            return /@preserve|@license|@cc_on/i.test(text);\r\n        }\r\n    }\r\n  }\r\n});\r\n```\r\n\r\nSee [UglifyJS documentation](https://github.com/mishoo/UglifyJS2#keeping-comments-in-the-output) for further reference.\r\n\r\n# License\r\n\r\nMIT © [Bogdan Chadkin](mailto:trysound@yandex.ru)\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/TrySound/rollup-plugin-uglify.git"
  },
  "scripts": {
    "prepublish": "yarn test",
    "test": "jest --coverage"
  },
  "version": "2.0.1"
}
